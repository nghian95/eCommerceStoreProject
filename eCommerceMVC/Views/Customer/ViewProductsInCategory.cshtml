@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor;
@model IEnumerable<eCommerceMVC.Models.Products>

@{
    ViewData["Title"] = "ViewProductsInCategory";
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
    var categories = httpContextAccessor.HttpContext.Request.Cookies["Category"];
    var cookieCategoryId = Int32.Parse(httpContextAccessor.HttpContext.Request.Cookies["CategoryId"]);
    var cookieCategory = categories.Substring(0, categories.Length - 1);
    var category = "Test";
    switch (cookieCategory)
    {
        case "Scarve":
            category = "Scarf";
            break;
        case "Short":
            category = "Shorts";
            break;
        case "Tight":
            category = "Tights";
            break;
        case "Underwea":
            category = "Underwear";
            categories = "Underwear";
            break;
        case "Watche":
            category = "Watch";
            break;
        case "Shoe":
            category = "Shoes";
            break;
        case "Earmuff":
            category = "Earmuffs";
            break;
        default:
            category = cookieCategory;
            break;
    }
    if (TempData["Category"].ToString() != categories)
    {
        categories = TempData["Category"].ToString();
    }
    //TempData["BackLink"] = "SpecificCategory";
}
<h2>View All @categories</h2>

@{
    if (Model != null && Model.Count() != 0)
    {
        <div>
            @{int num = 0; }
            @foreach (var item in Model)
            {
                var name = "Image" + num;
                num++;

                if (@ViewData[name] != null)
                {
                    <div>
                        <img class="w-25" src="@Url.Action("show", "image", new { id = (int)@ViewData[name] })" alt="Product's Picture">
                    </div>
                }

                <div>
                    @Html.ActionLink(item.Name, "ViewProductLanding", item)
                </div>
                <div>
                    @Html.DisplayNameFor(model => model.Quantity):
                    @Html.DisplayFor(modelItem => item.Quantity)
                </div>
                <div>
                    @Html.DisplayNameFor(model => model.Price):
                    @Html.DisplayFor(modelItem => item.Price)
                </div>
            }
        </div>
    }
    else
    {
        string categ = ((string)@categories.ToLower());
        <p>We don't have any @categ yet, sorry!</p>
    }
}
